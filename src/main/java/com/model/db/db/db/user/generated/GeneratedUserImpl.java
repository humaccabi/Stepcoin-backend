package com.model.db.db.db.user.generated;

import com.model.db.db.db.user.User;
import com.speedment.runtime.core.util.OptionalUtil;
import java.sql.Timestamp;
import java.util.Objects;
import java.util.Optional;
import java.util.StringJoiner;
import javax.annotation.Generated;

/**
 * The generated base implementation of the {@link
 * com.model.db.db.db.user.User}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public abstract class GeneratedUserImpl implements User {
    
    private int id;
    private String email;
    private String password;
    private String phoneNumber;
    private String credits;
    private Timestamp createTime;
    
    protected GeneratedUserImpl() {
        
    }
    
    @Override
    public int getId() {
        return id;
    }
    
    @Override
    public Optional<String> getEmail() {
        return Optional.ofNullable(email);
    }
    
    @Override
    public Optional<String> getPassword() {
        return Optional.ofNullable(password);
    }
    
    @Override
    public Optional<String> getPhoneNumber() {
        return Optional.ofNullable(phoneNumber);
    }
    
    @Override
    public Optional<String> getCredits() {
        return Optional.ofNullable(credits);
    }
    
    @Override
    public Optional<Timestamp> getCreateTime() {
        return Optional.ofNullable(createTime);
    }
    
    @Override
    public User setId(int id) {
        this.id = id;
        return this;
    }
    
    @Override
    public User setEmail(String email) {
        this.email = email;
        return this;
    }
    
    @Override
    public User setPassword(String password) {
        this.password = password;
        return this;
    }
    
    @Override
    public User setPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
        return this;
    }
    
    @Override
    public User setCredits(String credits) {
        this.credits = credits;
        return this;
    }
    
    @Override
    public User setCreateTime(Timestamp createTime) {
        this.createTime = createTime;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = " + Objects.toString(getId()));
        sj.add("email = " + Objects.toString(OptionalUtil.unwrap(getEmail())));
        sj.add("password = " + Objects.toString(OptionalUtil.unwrap(getPassword())));
        sj.add("phoneNumber = " + Objects.toString(OptionalUtil.unwrap(getPhoneNumber())));
        sj.add("credits = " + Objects.toString(OptionalUtil.unwrap(getCredits())));
        sj.add("createTime = " + Objects.toString(OptionalUtil.unwrap(getCreateTime())));
        return "UserImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof User)) { return false; }
        final User thatUser = (User)that;
        if (this.getId() != thatUser.getId()) {return false; }
        if (!Objects.equals(this.getEmail(), thatUser.getEmail())) {return false; }
        if (!Objects.equals(this.getPassword(), thatUser.getPassword())) {return false; }
        if (!Objects.equals(this.getPhoneNumber(), thatUser.getPhoneNumber())) {return false; }
        if (!Objects.equals(this.getCredits(), thatUser.getCredits())) {return false; }
        if (!Objects.equals(this.getCreateTime(), thatUser.getCreateTime())) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getId());
        hash = 31 * hash + Objects.hashCode(getEmail());
        hash = 31 * hash + Objects.hashCode(getPassword());
        hash = 31 * hash + Objects.hashCode(getPhoneNumber());
        hash = 31 * hash + Objects.hashCode(getCredits());
        hash = 31 * hash + Objects.hashCode(getCreateTime());
        return hash;
    }
}