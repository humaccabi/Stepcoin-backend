package com.model.db.db.db.location.generated;

import com.model.db.db.db.location.Location;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;
import java.util.stream.Stream;
import javax.annotation.Generated;

/**
 * The generated base implementation for the manager of every {@link
 * com.model.db.db.db.location.Location} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public abstract class GeneratedLocationManagerImpl extends AbstractManager<Location> implements GeneratedLocationManager {
    
    private final TableIdentifier<Location> tableIdentifier;
    
    protected GeneratedLocationManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("db", "db", "location");
    }
    
    @Override
    public TableIdentifier<Location> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<Location>> fields() {
        return Stream.of(
            Location.ID,
            Location.LATITUDE,
            Location.LONGITUDE,
            Location.ADDRESS
        );
    }
    
    @Override
    public Stream<Field<Location>> primaryKeyFields() {
        return Stream.of(
            Location.ID
        );
    }
}