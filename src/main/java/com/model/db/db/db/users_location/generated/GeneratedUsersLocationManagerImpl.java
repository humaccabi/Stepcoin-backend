package com.model.db.db.db.users_location.generated;

import com.model.db.db.db.users_location.UsersLocation;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;
import java.util.stream.Stream;
import javax.annotation.Generated;

/**
 * The generated base implementation for the manager of every {@link
 * com.model.db.db.db.users_location.UsersLocation} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public abstract class GeneratedUsersLocationManagerImpl extends AbstractManager<UsersLocation> implements GeneratedUsersLocationManager {
    
    private final TableIdentifier<UsersLocation> tableIdentifier;
    
    protected GeneratedUsersLocationManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("db", "db", "users_location");
    }
    
    @Override
    public TableIdentifier<UsersLocation> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<UsersLocation>> fields() {
        return Stream.of(
            UsersLocation.ID,
            UsersLocation.LATITUDE,
            UsersLocation.LONGITUDE,
            UsersLocation.ADDRESS,
            UsersLocation.TIMESTAMP,
            UsersLocation.USER_ID
        );
    }
    
    @Override
    public Stream<Field<UsersLocation>> primaryKeyFields() {
        return Stream.of(
            UsersLocation.ID,
            UsersLocation.USER_ID
        );
    }
}