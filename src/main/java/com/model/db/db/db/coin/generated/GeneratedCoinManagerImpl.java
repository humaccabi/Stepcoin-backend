package com.model.db.db.db.coin.generated;

import com.model.db.db.db.coin.Coin;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;
import java.util.stream.Stream;
import javax.annotation.Generated;

/**
 * The generated base implementation for the manager of every {@link
 * com.model.db.db.db.coin.Coin} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public abstract class GeneratedCoinManagerImpl extends AbstractManager<Coin> implements GeneratedCoinManager {
    
    private final TableIdentifier<Coin> tableIdentifier;
    
    protected GeneratedCoinManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("db", "db", "coin");
    }
    
    @Override
    public TableIdentifier<Coin> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<Coin>> fields() {
        return Stream.of(
            Coin.ID,
            Coin.VALUE,
            Coin.ENABLED,
            Coin.START_DATE,
            Coin.END_DATE,
            Coin.TAKEN,
            Coin.TAKEN_DATE,
            Coin.CREATE_TIME,
            Coin.STORE_ID,
            Coin.LOCATION_ID,
            Coin.USER_ID
        );
    }
    
    @Override
    public Stream<Field<Coin>> primaryKeyFields() {
        return Stream.of(
            Coin.ID
        );
    }
}